@model RiaPizza.Models.DeliveryArea
@{
    ViewData["Title"] = "DeliveryArea";
    Layout = "~/Views/Shared/_LayoutSite.cshtml";
    List<DishCategory> dishCategories = ViewBag.Categories;
}
@section css{
    <link rel="stylesheet" type="text/css" href="~/client-assets/swiper.css">
    <link rel="stylesheet" type="text/css" href="~/client-assets/res/custom.css" />
    <link rel="stylesheet" type="text/css" href="~/client-assets/custom/explore.css" />
    <style>
        .topping-info {
            color: red;
            float: right
        }

        .tip label {
            width: 100%;
            padding: 8px;
            background: #f0f0f0;
            margin-bottom: 5px;
        }

        .tip .tip-form {
            display: none;
            background: #f0f0f0;
            text-align: center;
            margin-bottom: 5px;
            padding: 10px 5px;
        }

        .tip-form input[value="-"] {
            margin-right: -4.5px;
        }

        .tip-form input[value="+"] {
            margin-left: -4.5px;
        }
    </style>

}
<!-- <script src="~/Angular/Controllers/ViewDishesPage.js"></script> -->

<script src="https://www.paypalobjects.com/api/checkout.js"></script>
<script>


    App.controller("ViewDishes", ['$scope', '$rootScope', '$http', '$compile', function ($scope, $rootScope, $http, $compile) {

        function JsonCallParam(Controller, Action, Parameters) {
            $.ajax({
                type: "POST",
                traditional: true,
                async: false,
                cache: false,
                url: '/' + Controller + '/' + Action,
                context: document.body,
                data: Parameters,
                success: function (json) {
                    list = null;
                    list = json;
                }
                ,
                error: function (xhr) {
                    list = null;
                }
            });
        }
        function JsonCall(Controller, Action) {
            $.ajax({
                type: "POST",
                traditional: true,
                async: false,
                cache: false,
                url: '/' + Controller + '/' + Action,
                context: document.body,
                success: function (json) {
                    list = null; list = json;
                },
                error: function (xhr) {
                    list = null;
                    //debugger;
                }
            });
        }

        //Styling
        $('#paypal-button').hide();
        //Styling

        //Start Choose Dishes Attributes
        $scope.dishCategories = [];
        $scope.toppings = [];
        $scope.temp = "Select Value";
        $scope.cartItem = { dishId: 0, dishName: "", quantity: 0, dishPrice: 0, priceWithExtras: 0, totalPrice: 0, remarks: "", toppings: [], dishSize: {} };
        $scope.cart = [];
        $scope.ordertotalPrice = { subtotal: 0, totalPrice: 0, tax: 0, deliveryCharges: 0, tip: 0 };
        $scope.schedule = [];
        $scope.dishSizeIdSelectedDish = "0";
        $scope.coupon = { code: '' };
        $scope.showDiscount = false;
        //End Choose Dishes Attributes

        //Start Ordering Attributes
        $scope.order = {
            recievingTime: '', orderCode: '', remarks: '',
            paymentMethod: 'Cash', isPaymentConfirmed: false, orderStatus: '',
            subTotal: 0, discount: 0, totalBill: 0, userId: 0, tip: 0, deliveryCharges: 0,
            orderBy: {}, orderDeliveryAddress: {}, orderItems: {}
        };
        $scope.orderBy = { name: '', email: '', contact: '', company: '' };
        $scope.orderDeliveryAddress = { city: '', floor: '', address: '', postalCode: '' };
        $scope.orderItems = [];
        $scope.userAddresses = [];
        $scope.userAddressId = "0";
        $scope.postalCode = "";
        $scope.postalArea = "";

        paypal.Button.render({
            // Configure environment
            env: 'sandbox',
            client: {
                sandbox: 'AWi18rxt26-hrueMoPZ0tpGEOJnNT4QkiMQst9pYgaQNAfS1FLFxkxQuiaqRBj1vV5PmgHX_jA_c1ncL',
                production: 'demo_production_client_id'
            },
            // Customize button (optional)
            locale: 'en_US',
            style: {
                size: 'large',
                color: 'blue',
                shape: 'rect',
            },

            // Enable Pay Now checkout flow (optional)
            commit: false,

            payment: function () {
                var env = this.props.env;
                var client = this.props.client;
                return paypal.rest.payment.create(env, client, {
                    transactions: [
                        {
                            amount: { total: $scope.ordertotalPrice.totalPrice.toString(), currency: 'EUR' }
                        }
                    ]
                });
            },
            // Execute the payment
            onAuthorize: function (data, actions) {
                return actions.payment.execute().then(function () {
                    $scope.order.isPaymentConfirmed = true;
                    $scope.processOrder();
                });
            }
        }, '#paypal-button');

        $scope.shopschedule = { isOpen: false, deliveryTimings: [] };
        //End Ordering Attributes

        $rootScope.$on("LoadUserData", function (e, args) {
            if (args) {
                $scope.loadUserDataInCheckOut();
            }
        });

        //Start Ordering Methods
        $scope.createOrder = function () {
            if (!$scope.shopschedule.isOpen) {
                showNotification("Shop is closed, Please try later!")
                return;
            }

            if ($scope.order.paymentMethod === 'Cash') {
                $scope.processOrder();
            }
            else if ($scope.order.paymentMethod === 'Paypal') {
                $('#cashbtn').hide();
                $('#showpaypalbtn-guide').slideToggle();
                $('#paypal-button').slideToggle();

            }
        }
        $scope.loadUserDataInCheckOut = function () {
            JsonCall("Auth", "GetLoggedInUser");
            if (list != false) {
                var user = list;
                $scope.orderDeliveryAddress.address = user.address;
                //$scope.orderDeliveryAddress.city = user.city;

                $scope.orderBy.name = user.firstName + ' ' + user.lastName;
                $scope.orderBy.email = user.email;
                $scope.orderBy.contact = user.phoneNumber;
                $scope.orderBy.company = user.company;

                var postalCode = $scope.orderDeliveryAddress.postalCode;
                $scope.order.userId = user.id;
                $http.post('/MyAccount/GetUserAddresses?id=' + user.id + '&code=' + postalCode).then(function (response) {
                    $scope.userAddresses = response.data;
                });
                $scope.order.remarks = user.previousOrderRemarks;
                $('#selectaddress').val(0);
                $scope.userAddressId = 0;
            }
        }
        $scope.processOrder = function () {
            $scope.order.discount = $scope.discount;
            $scope.order.subTotal = $scope.ordertotalPrice.subtotal;
            $scope.order.tip = $scope.ordertotalPrice.tip;
            $scope.order.deliveryCharges = $scope.ordertotalPrice.deliveryCharges;
            $scope.order.totalBill = $scope.ordertotalPrice.totalPrice + $scope.order.tip;
            pushCartItemInOrderItems();
            $scope.order.orderBy = $scope.orderBy;
            $scope.order.orderDeliveryAddress = $scope.orderDeliveryAddress;
            $scope.order.orderItems = $scope.orderItems;

            if ($scope.order.userId !== 0) {
                if (Number($scope.userAddressId) === 0)
                    var pram = { "order": JSON.stringify($scope.order), "addAddress": JSON.stringify(true) };
                else
                    var pram = { "order": JSON.stringify($scope.order), "addAddress": JSON.stringify(false) };
            }
            else
                var pram = { "order": JSON.stringify($scope.order), "addAddress": JSON.stringify(false) };


            JsonCallParam("Orders", "Create", pram);
            if (list == "Failed") {
                alert("Please Try Later!");
                return;
            }
            if ($scope.order.userId == 0) {
                var orderCode = list.orderCode;
                var orderList = JSON.parse(localStorage.getItem('orders'));
                if (orderList == null) {
                    orderList = [];
                }
                orderList.push(orderCode);
                localStorage.setItem('orders', JSON.stringify(orderList));

            }
            localStorage.removeItem('cart');
            var area = $('#postalArea').val();
            window.location.href = "/Orders/ThankYou/?address=" + area + "&id=" + list.orderId;
        }
        $scope.fillUserAddress = function () {
            if (Number($scope.userAddressId) !== 0) {
                var add = $scope.userAddresses.find(x => x.appUserAddressId === Number($scope.userAddressId))
                //$scope.orderDeliveryAddress.city = add.city;
                $scope.orderDeliveryAddress.floor = add.floor;
                $scope.orderDeliveryAddress.address = add.address;

                $('#checkoutForm input[name="address"]').val(add.address);
                //$('#checkoutForm input[name="city"]').val(add.city);
                $('#checkoutForm input[name="floor"]').val(add.floor);
            }
        }
        function pushCartItemInOrderItems() {
            for (var i = 0; i < $scope.cart.length; i++) {
                if ($scope.cart[i].dishSize.dishSizeId)
                    var dishToppings = "Size: " + $scope.cart[i].dishSize.size + $scope.cart[i].dishSize.diameter;
                else
                    var dishToppings = "";

                for (var j = 0; j < $scope.cart[i].toppings.length; j++) {

                    if ($scope.cart[i].toppings[j].toppings.length !== 0) {
                        dishToppings += $scope.cart[i].toppings[j].handler + ": [";
                        for (var k = 0; k < $scope.cart[i].toppings[j].toppings.length; k++) {

                            if (k < $scope.cart[i].toppings[j].toppings.length - 1)
                                dishToppings += $scope.cart[i].toppings[j].toppings[k] + ', ';
                            else
                                dishToppings += $scope.cart[i].toppings[j].toppings[k];

                        }
                        dishToppings += "] ";
                    }

                }
                $scope.orderItems.push({ dishId: $scope.cart[i].dishId, extras: dishToppings, quantity: $scope.cart[i].quantity, dishBasePrice: $scope.cart[i].dishPrice, dishPriceWithAddOnes: $scope.cart[i].priceWithExtras, totalPrice: $scope.cart[i].totalPrice, remarks: $scope.cart[i].remarks });
            }
        }
        $scope.getShopOpenStatus = function () {
            JsonCall("ShopSchedule", "GetShopStatus");
            $scope.shopschedule = list;
        }
        //End Ordering Methods

        //Start Cart Manager Methods
        function totalPriceGenerator() {
            $scope.ordertotalPrice.subtotal = 0;
            for (var i in $scope.cart) {
                $scope.ordertotalPrice.subtotal += $scope.cart[i].totalPrice;
            }
            $scope.ordertotalPrice.totalPrice = $scope.ordertotalPrice.subtotal + $scope.ordertotalPrice.deliveryCharges;
        }
        $scope.loadCart = function () {
            var cart = localStorage.getItem('cart');
            if (cart) {
                $scope.cart = JSON.parse(localStorage.cart);
                totalPriceGenerator();
            }
        };
        $scope.saveCart = function () {
            if (window.localStorage) {
                localStorage.cart = JSON.stringify($scope.cart);
            }
        };
        $scope.addToCart = function (dish) {
            if ($scope.shopschedule.isOpen) {
                var alreadyExistDishIndex = $scope.cart.findIndex(x =>
                    x.dishId === dish.dishId &&
                    x.toppings.map(s => s.toppings.sort().join(',')).join() === $scope.toppings.map(s => s.toppings.sort().join(',')).join() &&
                    x.dishSize.dishSizeId == $scope.dishSizeIdSelectedDish);
                if (alreadyExistDishIndex > -1) {
                    $scope.cart[alreadyExistDishIndex].quantity = $scope.cart[alreadyExistDishIndex].quantity + $scope.cartItem.quantity;
                    $scope.cart[alreadyExistDishIndex].totalPrice = $scope.cart[alreadyExistDishIndex].totalPrice + $scope.cartItem.totalPrice;
                }
                else {
                    $scope.cartItem.dishId = dish.dishId;
                    $scope.cartItem.dishName = dish.dishName;
                    $scope.cartItem.toppings = $scope.toppings;
                    if (dish.dishSizes.length > 0)
                        $scope.cartItem.dishSize = dish.dishSizes.find(s => s.dishSizeId === $scope.dishSizeIdSelectedDish);
                    else
                        $scope.cartItem.dishSize = { dishSizeId: 0 };

                    $scope.cart.push($scope.cartItem);
                }
                $scope.saveCart();
                $scope.loadCart();
                cartButtonEffect();
            }
            else {
                showNotification("Shop is closed, Please try later!");
            }
        };
        $scope.increaseQty = function (index) {
            $scope.cart[index].quantity = $scope.cart[index].quantity + 1;
            $scope.cart[index].totalPrice += $scope.cart[index].priceWithExtras;
            $scope.saveCart();
            $scope.loadCart();
        }
        $scope.decreaseQty = function (index) {
            if ($scope.cart[index].quantity == 1) {
                $scope.cart.splice(index, 1);
            }
            else {
                $scope.cart[index].quantity = $scope.cart[index].quantity - 1;
                $scope.cart[index].totalPrice -= $scope.cart[index].priceWithExtras;
            }
            $scope.saveCart();
            $scope.loadCart();
        }
        $scope.removeItem = function (index) {
            $scope.cart.splice(index, 1);
            $scope.saveCart();
            $scope.loadCart();
        }
        $scope.saveRemarks = function (index) {
            $('.commentinput-' + index).toggle();
            $scope.saveCart();
            $scope.loadCart();
        }
        $scope.showRemarkBar = function (index) {
            $('.commentinput-' + index).toggle();
        }
        //End Cart Manager Methods

        //Start Choose Dishes Methods
        $scope.getDishCategories = function () {
            JsonCall("Dishes", "GetCategories");
            if (list != null) {
                $scope.dishCategories = list;
            }

            $scope.dishCategories.forEach(s => s.dishes.sort(function (a, b) {
                return a.basePrice - b.basePrice
            })
            );

        };
        $scope.getDishCategories();
        $scope.LoadDishExtras = function (Id, categoryIndex, dishIndex, price) {
            $('.dish-expand-icon').removeClass('fa-minus').addClass('fa-plus');
            $scope.toppings = [];
            JsonCallParam("Dishes", "GetDishesExtraTypes", { id: Id });
            $scope.cartItem = { quantity: 1, dishPrice: price, priceWithExtras: price, totalPrice: price };
            if (list.length != 0 || $scope.dishCategories[categoryIndex].dishes[dishIndex].dishSizes.length != 0) {
                $scope.dishCategories[categoryIndex].dishes[dishIndex].dishExtraTypes = list;

                for (var i = 0; i < list.length; i++) {
                    $scope.toppings.push({ handler: list[i].typeName, toppings: [] });
                }
                $scope.dishSizeIdSelectedDish = "0";
                $('.collapse').collapse('hide');
                $("#qty-" + Id).val(1);

                var isVis = $('#collapse_' + Id).is(':visible');
                if (!isVis)
                    $('#dish-expand-icon-' + Id).removeClass('fa-plus').addClass('fa-minus');
                else
                    $('#dish-expand-icon-' + Id).addClass('fa-plus').removeClass('fa-minus');

                $('#collapse_' + Id).collapse("toggle");
            }
            else {
                $scope.toppings = [];
                $scope.dishSizeIdSelectedDish = "0";
                $('.collapse').collapse('hide');
                $scope.addToCart($scope.dishCategories[categoryIndex].dishes[dishIndex]);
            }
        };
        $scope.showMoreExtras = function (dishExtraTypeId) {
            var list = document.getElementsByClassName('extraType-' + dishExtraTypeId);
            for (var i = 3; i < list.length; i++) {
                list[i].style.display = "block";
            }

            $('#more-btn-' + dishExtraTypeId).hide();
            $('#less-btn-' + dishExtraTypeId).show();
        };
        $scope.hideMoreExtras = function (dishExtraTypeId) {
            var list = document.getElementsByClassName('extraType-' + dishExtraTypeId);
            for (var i = 3; i < list.length; i++) {
                list[i].style.display = "none";
            }

            $('#dishExtras-' + dishExtraTypeId).hide();
            $('#more-btn-' + dishExtraTypeId).show();
            $('#less-btn-' + dishExtraTypeId).hide();
        };
        $scope.toggleToppings = function (extraName, extraType, price, sizeToppingPrices) {
            var typeIndex = $scope.toppings.findIndex(item => item.handler === extraType);
            var idx = $scope.toppings[typeIndex].toppings.indexOf(extraName);

            if (sizeToppingPrices.length > 0) {
                price = sizeToppingPrices.find(s => s.dishSizeId === $scope.dishSizeIdSelectedDish).price;
            }

            if (idx > -1) {
                $scope.toppings[typeIndex].toppings.splice(idx, 1);
                $scope.cartItem.priceWithExtras = $scope.cartItem.priceWithExtras - price;
            }
            else {
                $scope.cartItem.priceWithExtras = $scope.cartItem.priceWithExtras + price;
                $scope.toppings[typeIndex].toppings.push(extraName);
            }

            updatePrice();
        };
        $scope.selectToppingDropdown = function (id, extras, extraType) {
            var obj = document.getElementById('inputGroupSelect-' + id).value;
            var extra = JSON.parse(obj);
            let extraName = extra.extraName;
            let price = extra.extraPrice;
            let extraAllergies = extra.allergies;
            if (extra.sizeToppingPrices.length > 0) {
                price = extra.sizeToppingPrices.find(s => s.dishSizeId === $scope.dishSizeIdSelectedDish).price;
            }
            var typeIndex = $scope.toppings.findIndex(item => item.handler === extraType);

            for (var i = 0; i < extras.length; i++) {
                var idx = $scope.toppings[typeIndex].toppings.indexOf(extras[i].extraName);
                if (idx > -1) {
                    $scope.toppings[typeIndex].toppings.splice(idx, 1);
                    if (extra.sizeToppingPrices.length > 0) {
                        let priceToMinus = extras[i].sizeToppingPrices.find(s => s.dishSizeId === $scope.dishSizeIdSelectedDish).price;
                        $scope.cartItem.priceWithExtras = $scope.cartItem.priceWithExtras - priceToMinus;
                    }
                    else
                        $scope.cartItem.priceWithExtras = $scope.cartItem.priceWithExtras - extras[i].extraPrice;
                }
            }

            $scope.toppings[typeIndex].toppings.push(extraName);
            $scope.cartItem.priceWithExtras = $scope.cartItem.priceWithExtras + price;

            updatePrice();

            $('#inputSelectedValue-' + id).html(extraName +
                '<i role="button" class="fas fa-info-circle topping-info pointer" onclick="showDishDesc(`' + extraAllergies + '`)"></i>');

        };
        $scope.selectDishSize = function (id, dishPrice) {
            var obj = document.getElementById('sizeSelect-' + id).value;
            var dishSize = JSON.parse(obj);
            let size = dishSize.size;
            let baseprice = dishSize.basePrice;
            $scope.cartItem.dishSize = dishSize;
            $scope.dishSizeIdSelectedDish = dishSize.dishSizeId;
            if (baseprice !== 0) {
                //$scope.cartItem.priceWithExtras = ($scope.cartItem.priceWithExtras - $scope.cartItem.dishPrice) + baseprice;
                $scope.cartItem.priceWithExtras = baseprice;
                $scope.cartItem.dishPrice = baseprice;
            }
            else {
                //$scope.cartItem.priceWithExtras = ($scope.cartItem.priceWithExtras - $scope.cartItem.dishPrice) + dishPrice;
                $scope.cartItem.priceWithExtras = baseprice;
                $scope.cartItem.dishPrice = dishPrice;
            }
            $('.topping-select').attr('checked', false);
            $('.topping-dropdown').attr('value', 'Select Value');
            $scope.toppings.forEach(item => { item.toppings = [] });
            updatePrice();
            $('#dishSize-' + id).html(size);

        };
        function updatePrice() {
            $scope.cartItem.totalPrice = $scope.cartItem.priceWithExtras * $scope.cartItem.quantity;
        };
        $scope.addQty = function (index, operator) {
            //e.preventDefault();
            var currentVal = Number(document.getElementById('qty-' + index).value);

            if (!isNaN(currentVal)) {
                if (operator == "add") {
                    $("#qty-" + index).val(currentVal + 1);
                    $scope.cartItem.quantity = $scope.cartItem.quantity + 1;
                }
                else if (operator == "less") {
                    if (currentVal != 1) {
                        $("#qty-" + index).val(currentVal - 1);
                        $scope.cartItem.quantity = $scope.cartItem.quantity - 1;
                    }
                }
            } else {
                $("#qty-" + index).val(1);
            }
            updatePrice();
        }
        //End Choose Dishes Methods

        $scope.getDeliveryTiming = function () {
            JsonCall("ShopSchedule", "GetSchedule");
            $scope.schedule = list;
        }
        $scope.validateCoupon = function () {
            JsonCallParam("Coupons", "ValidateCoupon", { code: $scope.coupon.code });
            if (list == false) {
                $('#couponValidation').html('').removeClass("text-success").addClass("text-danger").append('Coupon is not valid');
                $scope.showDiscount = false;
                totalPriceGenerator();
                $scope.discount = 0;
                return;
            }
            $scope.coupon = list;
            $scope.discount = $scope.ordertotalPrice.subtotal * $scope.coupon.discountPercent;
            $scope.ordertotalPrice.totalPrice = ($scope.ordertotalPrice.subtotal + $scope.ordertotalPrice.deliveryCharges) - $scope.discount;
            //$scope.ordertotalPrice.totalPrice = $scope.ordertotalPrice.totalPrice - $scope.discount;
            $scope.showDiscount = true;
            $('#couponValidation').html('').removeClass("text-danger").addClass("text-success").append('Coupon found! Discount applied!');
        }
        $scope.proceedOrder = function () {
            if (!$scope.shopschedule.isOpen) {
                showNotification("Shop is closed! Please try later!")
                return;
            }
            if ($scope.cart.length < 1) {
                return;
            }
            $('#chooseDishes').hide();
            $('#orderTab').show();
            $('#orderBtn').hide();
            topFunction();

            $('.cart-btn-section').show();
            $scope.loadUserDataInCheckOut();
            $('#selectaddress').val(0);
        }
        $scope.backToDishes = function () {
            $('#chooseDishes').show();
            $('#orderTab').hide();
            $('#orderBtn').show();
            $('.cart-btn-section').show();
        }
        $scope.showDishDesc = function (allergies, allergiesOf) {
            $(".dishDetails").modal();
            $(".dishAllergies").html('');

            if (allergies === '' && allergies === null) {
                $(".dishAllergies").html("<h6 style='font-weight:bold'>No Allergies Found</h6>");
                return;
            }

            if (allergiesOf == 'toppings') {
                var allergyList = allergies.split(',');
                if (allergyList.length > 0) {
                    $(".dishAllergies").append('<h6 style="font-weight:bold">Allergies</h6> <ul> </ul>');
                    allergyList.forEach(function (val, key) {
                        $(".dishAllergies ul").append('<li> ' + val + ' </li>');
                    })
                }
                else
                    $(".dishAllergies").html(allergies);
            }
            else
                $(".dishAllergies").html(allergies);
        }
        function cartButtonEffect() {
            var time = 700;
            setTimeout(function () {
                $('#cart-btn-mob').removeClass("bg-danger").addClass("bg-danger");
            }, time);
            $('#cart-btn-mob').removeClass("bg-danger").addClass("bg-danger");

        }

        $scope.cashSelection = function () {
            $('#cashbtn').show();
            $('#showpaypalbtn-guide').slideUp();
            $('#paypal-button').slideUp();
        }

        $scope.showToppingPrice = function (price) {
            return price > 0 ? "(+" + price.toFixed(2) + "€)" : "";
        }

        $scope.filterToppingSizePrice = function (id, arr) {
            if (id !== '0' && id != 0) {
                var price = arr.find(s => s.dishSizeId == id).price;
                return price > 0 ? "(+" + price.toFixed(2) + "€)" : "";
            }
        }

        $scope.showTip = function () {
            $('.tip-form').slideDown();
            $('#tip-input').val(5)
            $scope.ordertotalPrice.tip = 5;
        }

        $scope.hideTip = function () {
            $('.tip-form').slideUp();
            $('#tip-input').val(0);
            $scope.ordertotalPrice.tip = 0;
        }

        $scope.increaseTip = function () {
            var value = $('#tip-input').val();
            $('#tip-input').val(Number(value) + 1);
            $scope.ordertotalPrice.tip = Number(value) + 1;
        }

        $scope.decreaseTip = function () {
            var value = $('#tip-input').val();
            if (Number(value) !== 1) {
                $('#tip-input').val(Number(value) - 1);
                $scope.ordertotalPrice.tip = Number(value) - 1;
            }
        }
        $scope.scheduleTimeAlgo = function () {
            var now = new Date();
            var currentTime = now.getHours();
            var timeList = [{ hourNo: 0, time: "00:00" },
            { hourNo: 0, time: "00:15" },
            { hourNo: 0, time: "00:30" },
            { hourNo: 0, time: "00:45" },
            { hourNo: 1, time: "01:00" },
            { hourNo: 1, time: "01:15" },
            { hourNo: 1, time: "01:30" },
            { hourNo: 1, time: "01:45" },
            { hourNo: 2, time: "02:00" },
            { hourNo: 2, time: "02:15" },
            { hourNo: 2, time: "02:30" },
            { hourNo: 2, time: "02:45" },
            { hourNo: 3, time: "03:00" },
            { hourNo: 3, time: "03:15" },
            { hourNo: 3, time: "03:30" },
            { hourNo: 3, time: "03:45" },
            { hourNo: 4, time: "04:00" },
            { hourNo: 4, time: "04:15" },
            { hourNo: 4, time: "04:30" },
            { hourNo: 4, time: "04:45" },
            { hourNo: 5, time: "05:00" },
            { hourNo: 5, time: "05:15" },
            { hourNo: 5, time: "05:30" },
            { hourNo: 5, time: "05:45" },
            { hourNo: 6, time: "06:00" },
            { hourNo: 6, time: "06:15" },
            { hourNo: 6, time: "06:30" },
            { hourNo: 6, time: "06:45" },
            { hourNo: 7, time: "07:00" },
            { hourNo: 7, time: "07:15" },
            { hourNo: 7, time: "07:30" },
            { hourNo: 7, time: "07:45" },
            { hourNo: 8, time: "08:00" },
            { hourNo: 8, time: "08:15" },
            { hourNo: 8, time: "08:30" },
            { hourNo: 8, time: "08:45" },
            { hourNo: 9, time: "09:00" },
            { hourNo: 9, time: "09:15" },
            { hourNo: 9, time: "09:30" },
            { hourNo: 9, time: "09:45" },
            { hourNo: 10, time: "10:00" },
            { hourNo: 10, time: "10:15" },
            { hourNo: 10, time: "10:30" },
            { hourNo: 10, time: "10:45" },
            { hourNo: 11, time: "11:00" },
            { hourNo: 11, time: "11:15" },
            { hourNo: 11, time: "11:30" },
            { hourNo: 11, time: "11:45" },
            { hourNo: 12, time: "12:00" },
            { hourNo: 12, time: "12:15" },
            { hourNo: 12, time: "12:30" },
            { hourNo: 12, time: "12:45" },
            { hourNo: 13, time: "13:00" },
            { hourNo: 13, time: "13:15" },
            { hourNo: 13, time: "13:30" },
            { hourNo: 13, time: "13:45" },
            { hourNo: 14, time: "14:00" },
            { hourNo: 14, time: "14:15" },
            { hourNo: 14, time: "14:30" },
            { hourNo: 14, time: "14:45" },
            { hourNo: 15, time: "15:00" },
            { hourNo: 15, time: "15:15" },
            { hourNo: 15, time: "15:30" },
            { hourNo: 15, time: "15:45" },
            { hourNo: 16, time: "16:00" },
            { hourNo: 16, time: "16:15" },
            { hourNo: 16, time: "16:30" },
            { hourNo: 16, time: "16:45" },
            { hourNo: 17, time: "17:00" },
            { hourNo: 17, time: "17:15" },
            { hourNo: 17, time: "17:30" },
            { hourNo: 17, time: "17:45" },
            { hourNo: 18, time: "18:00" },
            { hourNo: 18, time: "18:15" },
            { hourNo: 18, time: "18:30" },
            { hourNo: 18, time: "18:45" },
            { hourNo: 19, time: "19:00" },
            { hourNo: 19, time: "19:15" },
            { hourNo: 19, time: "19:30" },
            { hourNo: 19, time: "19:45" },
            { hourNo: 20, time: "20:00" },
            { hourNo: 20, time: "20:15" },
            { hourNo: 20, time: "20:30" },
            { hourNo: 20, time: "20:45" },
            { hourNo: 21, time: "21:00" },
            { hourNo: 21, time: "21:15" },
            { hourNo: 21, time: "21:30" },
            { hourNo: 21, time: "21:45" },
            { hourNo: 22, time: "22:00" },
            { hourNo: 22, time: "22:15" },
            { hourNo: 22, time: "22:30" },
            { hourNo: 22, time: "22:45" },
            { hourNo: 23, time: "23:00" },
            { hourNo: 23, time: "23:15" },
            { hourNo: 23, time: "23:30" },
            { hourNo: 23, time: "23:45" }];
            JsonCall("ShopSchedule", "GetShopStatus");
            var maxTime = list.deliveryTimings[0].timeTo;
            maxTime === 0 ? maxTime = 24 : maxTime = list.deliveryTimings[0].timeTo;
            $scope.scheduleHours = timeList.filter(s => s.hourNo > currentTime && s.hourNo <= maxTime);
        }

        function showNotification(text) {
            $.notify({
                message: text
            }, {
                placement: {
                    from: 'bottom',
                    align: 'center'
                },
                type: "info"
            });
        }
    }]);
    function showDishDesc(allergies) {
        $(".dishDetails").modal();
        $(".dishAllergies").html('');

        if (allergies === '' || allergies === 'null') {
            $(".dishAllergies").html("<h6 style='font-weight:bold'>No Allergies Found</h6>");
            return;
        }

        var allergyList = allergies.split(',');
        if (allergyList.length > 0) {
            $(".dishAllergies").append('<h6 style="font-weight:bold">Allergies</h6> <ul> </ul>');
            allergyList.forEach(function (val, key) {
                $(".dishAllergies ul").append('<li> ' + val + ' </li>');
            })
        }
        else
            $(".dishAllergies").html(allergies);
    }

</script>
<div ng-controller="ViewDishes" id="ViewDishes">
    <!-- Sidebar -->
    <div class="sidenav" id="sidebar" style="overflow:auto">
        <div class="container-fluid" ng-init="loadCart()">
            <div class="row py-2" style="margin-top: -10px; border-bottom: 1px solid #eee;">
                <div class="col-12 text-center">
                    <h6 style="font-size: 14px;
        font-weight: 600;
        color: rgb(102, 102, 102);
    ">
                        Korb
                    </h6>
                </div>
            </div>
            <div class="row pt-4 pb-2" style=" border-bottom: 1px solid #eee; width: 360px; ">
                <div ng-if="cart.length === 0">
                    <i class="fas fa-shopping-cart" style="font-size:-webkit-xxx-large; margin: auto; padding: 5% 0 0 40%;"></i>
                    <p class="basket-empty__text" style="text-align: center; margin: 10px;">Choose delicious dishes from the menu and order your menu.</p>
                </div>
                <div class="col-12" ng-repeat="item in cart track by $index">
                    <div class="row">
                        <div class="col-1">
                            <span style="font-size: 12px; color: #000; margin-right: 10px;">{{item.quantity}}x</span>
                        </div>
                        <div class="col-4">
                            <span style="font-size: 12px; color: #000; margin-right: 30px;">{{item.dishName}}</span>
                        </div>
                        <div class="col-3" style="padding:0">
                            <button class="cartIncreasBtn" style="width: 28px; height: 26px" ng-click="decreaseQty($index)">-</button>
                            <button class="cartIncreasBtn" style="width: 28px; height: 26px" ng-click="increaseQty($index)">+</button>
                        </div>
                        <div class="col-4" style="padding:0">
                            <a role="button" ng-click="showRemarkBar($index)" class="btn" style="padding: 0 10px; font-size: 13px; color: red"><i class="fas fa-pencil-alt"></i></a>
                            <span style="font-size: 12px; color: #000;">{{item.totalPrice | number : 2}}€</span>
                            <a role="button" ng-click="removeItem($index)" class="btn" style="padding: 0 0 0 10px; font-size: 13px; color: red"><i class="fas fa-trash-alt"></i></a>
                        </div>
                    </div>
                    <p class="cartToppings">
                        <span ng-if="item.dishSize.dishSizeId > 0">Size: {{item.dishSize.size}} {{item.dishSize.diameter}} </span>
                        <span ng-repeat="toppingItems in item.toppings" ng-if="toppingItems.toppings.length>0">

                            <span ng-repeat="topping in toppingItems.toppings" ng-init="toppingIndex = $index">
                                {{topping}}
                                <i ng-if="toppingIndex < toppingItems.toppings.length - 1">,</i>
                            </span>

                        </span>

                    </p>
                    <p class="cartToppings" ng-if="item.remarks!=''" style="margin-bottom:5% !important">{{item.remarks}}</p>
                    <div class="commentBox hide commentinput-{{$index}}" style="margin-bottom:10% !important">
                        <label>Remarks</label>
                        <textarea class="form-control" placeholder="Enter Remarks" ng-model="item.remarks"></textarea>
                        <a role="button" class="text-primary pointer" style="margin-left:10px">Clear</a>
                        <a role="button" class="text-primary pointer" ng-click="saveRemarks($index)">Save</a>
                    </div>
                </div>
            </div>
            <div class="row pt-4 pb-0" style="border-bottom: 1px solid #eee;" ng-init="requiredOrderValue = @Model.MinOrderCharges">
                <div class="col-6 text-left mt-2 mb-0" style="margin-left: -20px;">
                    <p style="font-size: 13px;">Zwischensumme</p>
                </div>
                <div class="col-6 text-right mt-2">
                    <p style="margin-right: -30px;font-size: 13px;" ng-init="postalCode = @Model.PostalCode">{{ordertotalPrice.subtotal | number : 2}} €</p>
                </div>
                <div class="col-6 text-left mt-2 mb-0" style="margin-left: -20px;" ng-if="showDiscount">
                    <p style="font-size: 13px;">Rabatt</p>
                </div>
                <div class="col-6 text-right mt-2" ng-if="showDiscount">
                    <p style="margin-right: -30px;font-size: 13px;">- {{discount | number : 2}} €</p>
                </div>
                <div class="col-6 text-left mb-2" style="margin-left: -20px;">
                    <p style="font-size: 13px; padding-top: 0px">Versandkosten</p>
                </div>
                <div class="col-6 text-right">
                    <p style="margin-right: -30px; font-size: 13px;  padding-top: 0px" ng-init="ordertotalPrice.deliveryCharges = @Model.DeliveryCharges">{{ordertotalPrice.deliveryCharges | number : 2}}</p>
                </div>
                <div class="col-6" style="margin-top: -20px; margin-left: -20px;">
                    <p class="font-weight-bold text-left" style="font-size: 13px; padding-top: 13px">Gesamt</p>
                </div>
                <div class="col-6" style="margin-top: -20px;">
                    <p class="font-weight-bold text-right" style="margin-right: -30px;  font-size: 13px; padding-top: 4px">{{ordertotalPrice.totalPrice | number : 2}} €</p>
                </div>
                <div class="col-8" style="margin-left: -20px;"
                     ng-if="ordertotalPrice.totalPrice < requiredOrderValue">
                    <p class="font-weight-bold text-left text-success" style="font-size: 13px;">Erforderliche Menge, um den Mindestbestellwert zu erreichen</p>
                </div>
                <div class="col-4">
                    <p class="font-weight-bold text-right text-success"
                       style="margin-right: -30px;  font-size: 13px;"
                       ng-if="ordertotalPrice.totalPrice < requiredOrderValue">
                        {{requiredOrderValue - ordertotalPrice.totalPrice | number : 2}} €
                    </p>
                </div>
            </div>
            <div class="row p-0">
                <div class="col-12 p-0 text-center">
                    <p ng-if="ordertotalPrice.totalPrice < @Model.MinOrderCharges" class="text-muted my-3" style=" font-size: 13px; color: #7d7d7d;">Leider liefern wir nur ab einem Mindestbestellwert von € @Model.MinOrderCharges (ohne. Versandkosten)</p>
                    <p ng-if="ordertotalPrice.totalPrice > @Model.MinOrderCharges" class="text-muted my-3" style=" font-size: 13px; color: #7d7d7d;">Sie haben die Mindestbestellmenge von erreicht @Model.MinOrderCharges € überprüfen</p>
                    <a id="orderBtn" ng-disabled="cart.length === 0" ng-click="proceedOrder()" ng-if="ordertotalPrice.totalPrice > @Model.MinOrderCharges" role="button" class="btn btn-block py-3 mx-auto text-center"
                       style="color: #fff; width:95%; background-color: red">Auftrag</a>
                </div>
            </div>
        </div>
    </div>
    <!-- Sidebar ends -->
    <div class="cart-btn-section" ng-if="cart.length > 0">
        <div id="cart-btn-mob" onclick="$('#cart-modal').modal(); $('.cart-btn-section').hide()" class="rounded-0 btn btn-block text-center text-white" style="border-bottom-width: 0px;border-right-width: 0px;border-left-width: 0px;border-top-width: 0px; background-color: red; color: white">
            <div style="float:left; width:25%">
                <span class="p1 fa-stack fa-2x has-badge" data-count="{{cart.length}}" style="margin-top: 10px">
                    <i id="cart-icon-mob" class="p3 fa fa-shopping-cart fa-stack-1x xfa-inverse" data-count="4b"></i>
                </span>
            </div>
            <div class="text-center" style="float:none; width:50%; padding: 10px; margin-left: 25%; font-weight:bold;margin-top: 10px;">
                Cart ({{ordertotalPrice.totalPrice}} €)
            </div>
            <div style="float:right; width:25%"></div>
        </div>
    </div>
    <div id="cart-modal" data-backdrop-limit="1" tabindex="-1" role="dialog"
         aria-labelledby="myModalLabel" aria-hidden="true" class="modal">
        <div class="modal-dialog modal-dialog-centered mx-auto my-modal">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header border-0">
                    <div class="row">
                        <div class="col-12">
                            <h6 class="modal-title">Korb</h6>
                        </div>
                    </div>
                </div>
                <div class="modal-body" ng-init="loadCart()">
                    <div style="margin-bottom: 10px">
                        <button type="button" class="close" data-dismiss="modal" onclick="$('.cart-btn-section').show()">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="row pt-4 pb-2" style="border-bottom: 1px solid #eee">
                        <div ng-if="cart.length === 0">
                            <i class="fas fa-shopping-cart" style="font-size:-webkit-xxx-large; margin: auto; padding: 5% 0 0 40%;"></i>
                            <p class="basket-empty__text" style="text-align: center; margin: 10px;">Wähle leckere Gerichte aus der Karte und bestelle Dein Menü.</p>
                        </div>
                        <div class="col-12" ng-repeat="item in cart track by $index">
                            <div class="row mob-cart-items">
                                <div class="col-1">
                                    <span style="padding-left:10px">{{item.quantity}}x</span>
                                </div>
                                <div class="col-5">
                                    <span style="padding-left:10px">{{item.dishName}}</span>
                                </div>
                                <div class="col-2" style="font-size:12px">
                                    <button class="cartIncreasBtn" style="width: 28px; height: 26px" ng-click="decreaseQty($index)">-</button>
                                    <button class="cartIncreasBtn" style="width:24px; height:26px;" ng-click="increaseQty($index)">+</button>
                                </div>
                                <div class="col-4">
                                    <a role="button" ng-click="showRemarkBar($index)" class="btn" style="padding: 0 10px; font-size: 13px; color: red;"><i class="fas fa-pencil-alt"></i></a>
                                    <span style="font-size: 12px; color: #000;">{{item.totalPrice | number : 2}}€</span>
                                    <a class="btn" ng-click="removeItem($index)" style="padding: 0 0 0 10px; font-size: 13px; color: red;"><i class="fas fa-trash-alt"></i></a>
                                </div>
                            </div>
                            <p class="cartToppings">
                                <span ng-if="item.dishSize.dishSizeId > 0">Size: {{item.dishSize.size}} {{item.dishSize.diameter}} </span>
                                <span ng-repeat="toppingItems in item.toppings" ng-if="toppingItems.toppings.length>0">
                                    {{toppingItems.handler}}: [
                                    <span ng-repeat="topping in toppingItems.toppings" ng-init="toppingIndex = $index">
                                        {{topping}}
                                        <i ng-if="toppingIndex < toppingItems.toppings.length - 1">,</i>
                                    </span>
                                    ]
                                </span>
                            </p>
                            <p class="cartToppings" ng-if="item.remarks!=''" style="margin-bottom:5% !important">{{item.remarks}}</p>
                            <div class="commentBox hide commentinput-{{$index}}" style="margin-bottom:10% !important">
                                <label>Remarks</label>
                                <textarea class="form-control" placeholder="Enter Remarks" ng-model="item.remarks"></textarea>
                                <a role="button" class="text-primary pointer" style="margin-left:10px">Clear</a>
                                <a role="button" class="text-primary pointer" ng-click="saveRemarks($index)">Save</a>
                            </div>
                        </div>
                    </div>
                    <div class="row pt-4 pb-0" style="border-bottom: 1px solid #eee;">
                        <div class="col-6 text-left mt-2 mb-0" style="margin-left: -20px;">
                            <p style="font-size: 13px;">Zwischensumme</p>
                        </div>
                        <div class="col-6 text-right mt-2">
                            <p style="margin-right: -30px;font-size: 13px;" ng-init="postalCode = @Model.PostalCode">{{ordertotalPrice.subtotal | number : 2}} €</p>
                        </div>
                        <div class="col-6 text-left mt-2 mb-0" style="margin-left: -20px;" ng-if="showDiscount">
                            <p style="font-size: 13px;">Rabatt</p>
                        </div>
                        <div class="col-6 text-right mt-2" ng-if="showDiscount">
                            <p style="margin-right: -30px;font-size: 13px;">- {{discount | number : 2}} €</p>
                        </div>
                        <div class="col-6 text-left mb-2" style="margin-left: -20px;">
                            <p style="font-size: 13px;">Versandkosten</p>
                        </div>
                        <div class="col-6 text-right">
                            <p style="margin-right: -30px; font-size: 13px;" ng-init="ordertotalPrice.deliveryCharges = @Model.DeliveryCharges">{{ordertotalPrice.deliveryCharges | number : 2}}</p>
                        </div>
                        <div class="col-6" style="margin-top: -20px; margin-left: -20px;">
                            <p class="font-weight-bold text-left pt-4" style="font-size: 13px;padding-top: 13px;">Total</p>
                        </div>
                        <div class="col-6" style="margin-top: -20px;">
                            <p class="font-weight-bold text-right" style="margin-right: -30px;  font-size: 13px;">{{ordertotalPrice.totalPrice | number : 2}} €</p>
                        </div>
                        <div class="col-6" style="margin-left: -20px;"
                             ng-if="ordertotalPrice.totalPrice < requiredOrderValue">
                            <p class="font-weight-bold text-left text-success" style="font-size: 13px;">Erforderliche Menge, um den Mindestbestellwert zu erreichen</p>
                        </div>
                        <div class="col-6">
                            <p class="font-weight-bold text-right text-success"
                               style="margin-right: -30px;  font-size: 13px;"
                               ng-if="ordertotalPrice.totalPrice < requiredOrderValue">
                                {{requiredOrderValue - ordertotalPrice.totalPrice | number : 2}} €
                            </p>
                        </div>
                    </div>
                    <div class="row p-0">
                        <div class="col-12 p-0 text-center">
                            <p ng-if="ordertotalPrice.totalPrice < @Model.MinOrderCharges" class="text-muted my-3" style=" font-size: 13px; color: #7d7d7d;">Leider liefern wir nur ab einem Mindestbestellwert von € @Model.MinOrderCharges (ohne. Versandkosten)</p>
                            <p ng-if="ordertotalPrice.totalPrice > @Model.MinOrderCharges" class="text-muted my-3" style=" font-size: 13px; color: #7d7d7d;">Sie haben die Mindestbestellmenge von erreicht @Model.MinOrderCharges € überprüfen</p>
                            <a id="orderBtn" ng-disabled="cart.length === 0" ng-click="proceedOrder()" ng-if="ordertotalPrice.totalPrice > @Model.MinOrderCharges" role="button" class="btn btn-block py-3 mx-auto text-center"
                               style="color: #fff; width:95%; background-color: red" data-dismiss="modal" onclick="$('#cart-modal').modal('hide');">Order</a>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <!--Choose Dishes-->
    <div id="chooseDishes" ng-init="getShopOpenStatus()">
        <!-- Modal Starts -->
        <div id="infoModal" class="modal" data-backdrop-limit="1" tabindex="-1" role="dialog"
             aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered mx-auto my-modal info-modal">
                <!-- Modal content-->
                <div class="modal-content info-content" style="margin:auto">
                    <div class="modal-header border-0 text-white">
                        <div class="row">
                            <div class="col-12">
                                <h4 class="modal-title">Über das Restaurant</h4>
                            </div>
                        </div>
                        <button type="button" class="close" data-dismiss="modal">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="modal-body">
                        <ul class="nav nav-tabs mb-3">
                            <li style="padding-bottom: 20px;">
                                Auskunft
                            </li>
                        </ul>

                        <div class="tab-content">
                            <div>
                                <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2524.5710064952273!2d8.076955115302928!3d50.74644507387427!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47bc186e9ba0a223%3A0x6a79ca7f91176277!2sAgentur%20f%C3%BCr%20Arbeit%20Burbach!5e0!3m2!1sen!2s!4v1582018821947!5m2!1sen!2s" frameborder="0" style="border:0;" allowfullscreen="" class="map"></iframe>
                            </div>
                            <div class="container-fluid">
                                <div class="row mt-4 align-items-center">
                                    <div class="col-md-1 col-2">
                                        <i class="fas fa-stopwatch fa-2x"></i>
                                    </div>
                                    <div class="col-md-11 col-10">
                                        <h5>Lieferzeiten</h5>
                                    </div>
                                </div>
                                <div class="my-3 p-3" style="background-color: #f8f5f2;" ng-init="getDeliveryTiming()">
                                    <div class="row" ng-repeat="timing in schedule.deliveryTimings">
                                        <div class="col-6">
                                            <p class="mb-2"
                                               style="font-size: 14px; font-weight: 400; color:rgb(102, 102, 102);">
                                                {{timing.day}}
                                            </p>
                                        </div>
                                        <div class="col-6 text-right">
                                            <p class="mb-2"
                                               style="font-size: 14px; font-weight: 400; color:rgb(102, 102, 102);">
                                                {{timing.timeFrom}}:00 - {{timing.timeTo}}:00
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                <div class="row mt-4 align-items-center">
                                    <div class="col-md-1 col-2">
                                        <i class="fas fa-bicycle fa-2x"></i>
                                    </div>
                                    <div class="col-md-11 col-10">
                                        <h5>Versandkosten</h5>
                                    </div>
                                </div>
                                <div class="row my-3 p-3" style="background-color: #f8f5f2;">
                                    <div class="col-6">
                                        <p class="mb-2"
                                           style="font-size: 14px; font-weight: 400; color:rgb(102, 102, 102);">
                                            Mindestbestellmenge
                                        </p>
                                        <p class="mb-2"
                                           style="font-size: 14px; font-weight: 400; color:rgb(102, 102, 102);">
                                            Kosten liefern
                                        </p>
                                    </div>
                                    <div class="col-6 text-right">
                                        <p class="mb-2"
                                           style="font-size: 14px; font-weight: 400; color:rgb(102, 102, 102);">
                                            @Model.MinOrderCharges €
                                        </p>
                                        <p class="mb-2"
                                           style="font-size: 14px; font-weight: 400; color:rgb(102, 102, 102);">
                                            @Model.DeliveryCharges €
                                        </p>
                                    </div>
                                </div>
                                <div class="row mt-4 align-items-center">
                                    <div class="col-md-1 col-2">
                                        <i class="fas fa-credit-card fa-2x"></i>
                                    </div>
                                    <div class="col-md-11 col-10">
                                        <h5>Zahlungsmethoden</h5>
                                    </div>
                                </div>
                                <div class="row text-center align-items-center my-3 mx-auto p-3"
                                     style="background-color: #f8f5f2;">
                                    <div class="col-2 bg-white p-2 border m-2">
                                        <img src="~/client-assets/res/img/payment_0.png" alt="payment_0" class="img-fluid" />
                                    </div>
                                    <div class="col-2 bg-white p-2 border m-2">
                                        <img src="~/client-assets/res/img/payment_6.png" alt="payment_1" class="img-fluid" />
                                    </div>
                                </div>
                                <div class="row mt-4 align-items-center">
                                    <div class="col-md-1 col-2">
                                        <i class="far fa-building fa-2x"></i>
                                    </div>
                                    <div class="col-md-11 col-10">
                                        <h5>Colophon</h5>
                                    </div>
                                </div>
                                <div class="row my-3 p-3" style="background-color: #f8f5f2;">
                                    <div class="col-12">
                                        <p class="mb-2"
                                           style="font-size: 14px; font-weight: 400; color: rgb(102, 102, 102)">
                                            Inayat Ullah Begum handelt im Namen von Ria Pizza Herrenberg
                                        </p>
                                        <p class="mb-2"
                                           style="font-size: 14px; font-weight: 400; color: rgb(102, 102, 102)">
                                            Stuttgarter Straße 36
                                        </p>
                                        <p class="mb-5"
                                           style="font-size: 14px; font-weight: 400; color: rgb(102, 102, 102)">
                                            71083 Herrenberg
                                        </p>
                                        <p class="mb-2"
                                           style="font-size: 14px; font-weight: 400; color: rgb(102, 102, 102)">
                                            Email: info@digicon-valley.com
                                        </p>
                                        <p class="mb-2"
                                           style="font-size: 14px; font-weight: 400; color: rgb(102, 102, 102)">
                                            Plattform der EU-Kommission zur Online-Streitbeilegung:
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade dishDetails" role="dialog" style="width: 50%; margin: auto; top: 10%;">
            <div class="modal-dialog" style="background-color:white">
                <div class="modal-header text-white" style="border-bottom:none">
                    <h4>Weitere Produktinformationen</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body" style="border-bottom:none">
                    <div class="dishAllergies">

                    </div>
                </div>
                <div class="modal-footer" style="border-top: none; display:block; padding-bottom:5px">
                    <p>Kontaktieren Sie bitte <a href="#">Kundendienst</a> falls Sie Allergien oder Unverträglichkeiten haben.</p>
                </div>
            </div>
        </div>
        <!-- Modal Ends-->
        <!-- Header -->
        <header class="pizza-header" style="margin-right: 0 !important; height: 300px"></header>
        <!-- Header ends -->
        <!-- Restaurant Description -->
        <section class="item my-0" style="padding-bottom: 0px;padding-top: 0px;">
            <div class="container hotel-container">

            </div>
        </section>
        <!-- Restaurant Description ends -->

        <div class="js-menu-category-bar-sticky sticky-top mr" id="mainNav">
            <div class="swiper-container">
                <button type="button" onclick="showSearchBar()" class="left fas fa-search fa-1x border-0 bg-transparent" id="search-btn" style="background:#f8f5f2 !important; top:0"></button>
                <div class="swiper-wrapper" id="dish-list">
                    @for (int i = 0; i < dishCategories.Count(); i++)
                    {
                        <a href="#cat-@i" data-category="@i" class="swiper-slide nav-link js-scroll-trigger dishlink" style="width:auto; font-weight:bold; font-size:16px !important">@dishCategories[i].CategoryName</a>
                    }
                </div>
                <div class="input-group mb-3" id="search-box">
                    <input type="text" id="search-dish" class="form-control" placeholder="Search for meals, etc.." style="border-radius: 0 !important;">
                    <div class="input-group-append">
                        <button type="button" onclick="hideSearchBar()" class="input-group-text bg-white" id="cross-btn" style="border-radius: 0 !important; top:0"><i class="fas fa-times"></i></button>
                    </div>
                </div>
                <a href="#" class="swiper-next right fas fa-angle-right fa-2x hide" id="swiper-next" style="background:#f8f5f2 !important; top:0"></a>
                <!-- Add Pagination -->
                <div class="swiper-pagination">
                </div>
            </div>
        </div>
        <!-- Dish list -->
        <div class="groups">
            <section ng-repeat="dishCategory in dishCategories | orderBy : 'orderBy' " ng-init="categoryIndex=$index" id="cat-{{categoryIndex}}" class="group-item" index="{{$index}}">
                <div class="container">
                    <div class="row mx-md-2 mx-0 mt-3 dish-head {{dishCategory.categoryName}}" data-categoryhead="{{dishCategory.categoryName}}">
                        <div class="col-12 ml-5 py-3 mb-4 mx-auto dish-col" style="background:url(/Uploads/{{dishCategory.image}});">
                            <h5>{{dishCategory.categoryName}} </h5>

                            <!--<p>{{dishCategory.description}}</p> -->
                        </div>

                    </div>

                    <div class="row mx-md-2 mx-0 px-0 dishes" data-category="{{dishCategory.categoryName}}" ng-repeat="dish in dishCategory.dishes" ng-init="dishIndex = $index">
                        <div class="col-12 ml-5 py-1 pl-0 pr-0 mx-auto">
                            <div class="panel-group" id="accordion_{{dish.dishId}}" role="tablist" aria-multiselectable="true">
                                <div class="panel panel-default">
                                    <div class="panel-heading border pointer" role="tab" id="heading_{{dish.dishId}}" ng-click="LoadDishExtras(dish.dishId,categoryIndex,dishIndex, dish.basePrice)">
                                        <div class="row">
                                            <div class="col-9">
                                                <h5 class="panel-title row" style="padding-right:8px;font-weight:600;font-size:18px;">
                                                    {{dish.dishName}} &nbsp;
                                                    <i class="fas fa-info-circle product-info-btn bg-red" onclick="event.preventDefault()" ng-click="showDishDesc(dish.allergies, 'dish')"> </i>
                                                </h5>
                                            </div>
                                            <div class="col-3 text-right w-25">
                                                <i id="dish-expand-icon-{{dish.dishId}}" class="fas fa-plus border p-3 dish-expand-icon" style="color: red"></i>
                                            </div>
                                        </div>

                                        <p style="font-style: italic;font-size: 12px;color: #666;padding-right: 0px;padding-top: 0px;" ng-if="dish.subName">{{dish.subName}}</p>
                                        <span class="dish-desc" ng-bind-html="dish.description"></span>
                                        <h4 style="color:red;font-weight:600;font-size:18px;">{{dish.basePrice | number : 2 }} €</h4>
                                    </div>
                                    <div id="collapse_{{dish.dishId}}" class="panel-collapse collapse in" role="tabpanel"
                                         aria-labelledby="heading_{{dish.dishId}}">
                                        <div class="panel-body align-items-center py-4">
                                            <div class="container align-items-center">
                                                <div class="row" ng-if="dish.dishSizes.length > 0">
                                                    <div class="col-lg-8 col-md-8 col-sm-10 col-xs-10 mx-auto" ng-if="!extratype.chooseMultiple">
                                                        <label class="d-block">
                                                            {{dish.dishName}}
                                                        </label>
                                                        <select class="custom-select mt-2 pointer"
                                                                ng-model="dishSizeIdSelectedDish" id="sizeSelect-{{dish.dishId}}"
                                                                ng-change="selectDishSize(dish.dishId, dish.basePrice)">
                                                            <option style="font-size:14px;" hidden value="0">Select {{dish.dishName}} Size</option>
                                                            <option style="font-size:14px;" ng-repeat="size in dish.dishSizes" value="{{size}}">{{size.size}} {{size.diameter}} ({{size.basePrice | number : 2}}€)</option>
                                                        </select>
                                                        <p class="m-0 mb-3 p-2">
                                                            <span id="dishSize-{{dish.dishId}}"></span>
                                                        </p>
                                                    </div>
                                                </div>
                                                <div class="row" ng-repeat="extratype in dish.dishExtraTypes | orderBy : 'order'" ng-init="dishExtraTypeIndex = $index">
                                                    <div class="col-lg-8 col-md-8 col-sm-10 col-xs-10 mx-auto" ng-if="extratype.chooseMultiple" style="margin-bottom:20px">
                                                        <label class="d-block"> {{extratype.typeName}} </label>
                                                        <div ng-repeat="extra in extratype.dishExtras | orderBy : 'order'" ng-init="extraIndex=$index" class="custom-control custom-checkbox mb-2 extraType-{{extratype.dishExtraTypeId}}" ng-class="{ 'hide': extraIndex > 2 }">
                                                            <input ng-disabled="dish.dishSizes.length > 0 && dishSizeIdSelectedDish==='0'" type="checkbox" class="custom-control-input pointer topping-select"
                                                                   id="{{extra.dishExtraId}}_{{extraIndex}}"
                                                                   value="{{extra.extraName}}"
                                                                   ng-checked="toppings.indexOf(extra.extraName) > -1"
                                                                   ng-click="toggleToppings(extra.extraName, extratype.typeName, extra.extraPrice, extra.sizeToppingPrices)">
                                                            <label class="custom-control-label pointer" for="{{extra.dishExtraId}}_{{extraIndex}}" style="font-size: 12px;">
                                                                {{extra.extraName}}
                                                                {{dish.dishSizes.length > 0 ? filterToppingSizePrice(dishSizeIdSelectedDish, extra.sizeToppingPrices) : showToppingPrice(extra.extraPrice) }}
                                                            </label>
                                                            <i role="button" class="fas fa-info-circle topping-info pointer" ng-click="showDishDesc(extra.allergies, 'toppings')"></i>
                                                        </div>
                                                        <button style="color: red" ng-click="showMoreExtras(extratype.dishExtraTypeId)" id="more-btn-{{extratype.dishExtraTypeId}}" ng-if="extratype.dishExtras.length > 3" class="more-btn">
                                                            <i class="fas fa-angle-down mr-3 text-dark"></i>Zeig mehr
                                                        </button>
                                                        <button style="color: red" ng-click="hideMoreExtras(extratype.dishExtraTypeId)" id="less-btn-{{extratype.dishExtraTypeId}}" ng-init="hideListinit(extratype.dishExtraTypeId)" class="less-btn hide">
                                                            <i class="fas fa-angle-up mr-3 text-dark"></i>Zeige weniger
                                                        </button>
                                                    </div>
                                                    <div class="col-lg-8 col-md-8 col-sm-10 col-xs-10 mx-auto" ng-if="!extratype.chooseMultiple">
                                                        <label class="d-block">
                                                            {{extratype.typeName}}
                                                        </label>
                                                        <select ng-disabled="dish.dishSizes.length > 0 && dishSizeIdSelectedDish==='0'" class="custom-select mt-2 pointer topping-dropdown"
                                                                ng-model="temp" id="inputGroupSelect-{{extratype.dishExtraTypeId}}"
                                                                ng-change="selectToppingDropdown(extratype.dishExtraTypeId, extratype.dishExtras, extratype.typeName)">
                                                            <option style="font-size:14px;" hidden value="0">{{extratype.placeholder}}</option>
                                                            <option style="font-size:14px;" ng-repeat="extra in extratype.dishExtras | orderBy : 'order'" value="{{extra}}">
                                                                {{extra.extraName}}
                                                                {{dish.dishSizes.length > 0 ? filterToppingSizePrice(dishSizeIdSelectedDish, extra.sizeToppingPrices) : showToppingPrice(extra.extraPrice) }}
                                                            </option>
                                                        </select>
                                                        <p class="m-0 mb-3 p-2" id="inputSelectedValue-{{extratype.dishExtraTypeId}}">
                                                        </p>
                                                    </div>
                                                </div>
                                                <div style="width:100%; margin-bottom:6%">
                                                    <div class="text-right" style="width:40%; float:left">
                                                        <form method='POST' action='#' class="d-inline-block">
                                                            <input type='button' value='-' class='qtminus btn' ng-click="addQty(dish.dishId,'less')" />
                                                            <input id="qty-{{dish.dishId}}" type='text' style="color: red" name='quantity' class='qtvalue btn' disabled />
                                                            <input type='button' value='+' class='qtplus btn' ng-click="addQty(dish.dishId,'add')" />
                                                        </form>
                                                    </div>
                                                    <div class="text-left" style="width:60%; float:right">
                                                        <button ng-disabled="dish.dishSizes.length > 0 && dishSizeIdSelectedDish==='0'" class="order-btn" style="background-color: red; color: white" ng-click="addToCart(dish)" id="totalPrice-{{dishIndex}}">{{cartItem.totalPrice | number : 2}} €</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </section>
        </div>

    </div>

    <!-- Ready to eat section -->
    <section class="ready hide" id="orderTab">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <h1 class="eat-h"><a class="pointer" role="button" ng-click="backToDishes()"><i class="fas fa-chevron-left" style="font-size:30px"></i></a>&nbsp;  Ready to eat?</h1>
                    <p class="eat-para">Wohin soll Ihre Bestellung geliefert werden?</p>
                </div>
                <div class="col-12">
                    <div class="divider"></div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-0 pl-2 mt-4">
                        <label class="label">Von welcher Adresse bestellen Sie??</label>
                        <select class="form-control address-option" id="selectaddress" name="selectaddress" ng-init="userAddressId = 0" ng-model="userAddressId" ng-change="fillUserAddress()">
                            <option value="0" selected="selected">Geben Sie eine neue Adresse ein</option>
                            <option ng-repeat="add in userAddresses" value="{{add.appUserAddressId}}">{{add.address}}</option>
                        </select>
                    </div>
                </div>
            </div>
            <form id="checkoutForm" name="checkoutForm" ng-submit="createOrder()">
                <input type="hidden" id="postalArea" value="@Model.AreaName" />
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-0 pl-2 mt-3">
                            <label class="label">Address</label>
                            <input type="text" class="form-control address-option" ng-model="orderDeliveryAddress.address" name="address" required>
                            <p class="text-danger pt-4" ng-show="checkoutForm.address.$touched && checkoutForm.address.$error.required">* Adresse ist erforderlich.</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group mb-0 pl-2 mt-3">
                            <label class="label">Postcode</label>
                            <input type="text" class="form-control address-option" ng-init="orderDeliveryAddress.postalCode = @Model.PostalCode"
                                   ng-model="orderDeliveryAddress.postalCode" name="postalCode" disabled required>
                            <p class="text-danger pt-4" ng-show="checkoutForm.postalCode.$touched && checkoutForm.postalCode.$error.required">* Postleitzahl ist erforderlich.</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group mb-0 pl-2 mt-3">
                            <label label>City</label>
                            <input type="text" class="form-control address-option" ng-init="orderDeliveryAddress.city = '@Model.City'"
                                   ng-model="orderDeliveryAddress.city" name="city" value="@Model.City" disabled required>
                            <p class="text-danger pt-4" ng-show="checkoutForm.city.$touched && checkoutForm.city.$error.required">* Stadt ist erforderlich.</p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-0 pl-2 mt-3">
                            <label class="label">Floor</label>
                            <input type="text" class="form-control address-option" name="floor" ng-model="orderDeliveryAddress.floor">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 mb-3">
                        <div class="eat-para2">Wie können wir dich erreichen?</div>
                    </div>
                    <div class="col-12 mb-3">
                        <div class="divider"></div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-0 pl-2 mt-3">
                            <label class="label">Name</label>
                            <input type="text" class="form-control address-option" ng-model="orderBy.name" name="name" required>
                            <p class="text-danger pt-4" ng-show="checkoutForm.name.$touched && checkoutForm.name.$error.required">* Name ist erforderlich.</p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-0 pl-2 mt-3">
                            <label class="label">Email</label>
                            <input type="email" class="form-control address-option" ng-model="orderBy.email" name="email" required>
                            <p class="text-danger pt-4" ng-show="checkoutForm.email.$touched && checkoutForm.email.$error.required">* E-Mail ist erforderlich.</p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-0 pl-2 mt-3">
                            <label class="label">Telefonnummer</label>
                            <input type="text" class="form-control address-option" ng-model="orderBy.contact" name="contact" required>
                            <p class="text-danger pt-4" ng-show="checkoutForm.contact.$touched && checkoutForm.contact.$error.required">* Phonenumber is required.</p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-0 pl-2 mt-3">
                            <label class="label">Name der Firma</label>
                            <input type="text" class="form-control address-option" ng-model="orderBy.company" name="company">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <p class="eat-para2">Wann möchten Sie Ihr Essen?</p>
                    </div>
                    <div class="col-12">
                        <div class="divider"></div>
                    </div>
                    <div class="col-md-6" ng-init="scheduleTimeAlgo()">
                        <div class="form-group mb-0 pl-2 mt-3">
                            <label class="label">Bitte wählen Sie eine Lieferzeit</label>
                            <select class="form-control address-option" ng-model="order.recievingTime" name="recievingTime" required>
                                <option hidden value="">-Lieferzeit auswählen-</option>
                                <option>As soon as possible</option>
                                <option ng-repeat="time in scheduleHours">{{time.time}}</option>
                            </select>
                            <p class="text-danger pt-4" ng-show="checkoutForm.recievingTime.$touched && checkoutForm.recievingTime.$error.required">* Bitte wählen Sie die Empfangszeit.</p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-2 pl-2 mt-3">
                            <label class="label">Bemerkungen</label>
                            <textarea cols="30" rows="7" class="form-control address-option" ng-model="order.remarks"></textarea>
                        </div>
                        <div class="form-control remarks">
                            <input type="checkbox" class="p-3">
                            <span class="remarks-check">Speichern Sie diese Anmerkungen für Ihre nächste Bestellung.</span>
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-12 mb-3">
                        <div class="eat-para2">Wie möchten Sie bezahlen?</div>
                    </div>
                    <div class="col-12 mb-3">
                        <div class="divider"></div>
                    </div>
                    <div class="col-12 mb-2">
                        <label>
                            <input type="radio" name="paymentMethod" value="Cash" class="payment-selection" ng-click="cashSelection()" ng-model="order.paymentMethod" checked>
                            <img src="~/client-assets/res/img/payment_0.png" alt="" class="img-fluid border mr-3 p-2 payment-img">
                        </label>

                        <label>
                            <input type="radio" name="paymentMethod" value="Paypal" class="payment-selection" ng-model="order.paymentMethod">
                            <img src="~/client-assets/res/img/payment_6.png" alt="" class="img-fluid border p-2 payment-img">
                        </label>

                        <p class="text-danger pt-4" ng-show="checkoutForm.paymentMethod.$touched && checkoutForm.paymentMethod.$error.required">* Please select Payment Method.</p>
                    </div>

                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 mb-3">
                        <div class="eat-para2">Gutschein</div>
                        <div class="divider"></div>
                        <ul class="acc mb-0 pl-2 mt-3">
                            <li>
                                <button class="acc_ctrl"><span style="letter-spacing: 0 !important; text-decoration: underline; font-size: 13px; color: rgb(102, 102, 102);">Haben Sie einen Gutschein oder Gutschein??</span> </button>
                                <div class="small-panel" id="voucherPanel">
                                    <div class="acc_panel">
                                        <div class="input-group mb-3">
                                            <input type="text" class="form-control" ng-model="coupon.code" placeholder="Voucher code">
                                            <div class="input-group-append">
                                                <button onclick="event.preventDefault()" ng-click="validateCoupon()" id="basic-addon2" style="background-color: red">prüfen</button>
                                            </div>
                                        </div>
                                    </div>
                                    <p id="couponValidation"></p>
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 mb-3">
                        <div class="eat-para2">Möchten Sie einen Tipp geben?</div>
                        <div class="divider"></div>
                        <div class="form-group mb-0 pl-2 mt-3">
                            <div class="switch tip">
                                <label ng-click="showTip()">
                                    <input class="mr-2" type="radio" name="tip" value="true" required />
                                    Yes
                                </label>
                                <div class="tip-form">
                                    <input type="button" value="-" class="qtminus btn" ng-click="decreaseTip()">
                                    <input id="tip-input" type="text" name="quantity" class="qtvalue btn" disabled>
                                    <input type="button" value="+" class="qtplus btn" ng-click="increaseTip()">
                                </div>
                                <label ng-click="hideTip()">
                                    <input class="mr-2" type="radio" name="tip" value="false" required />
                                    No
                                </label>
                            </div>
                            <p class="text-danger pt-4" ng-show="checkoutForm.tip.$touched && checkoutForm.tip.$error.required">* Dieses Feld wird benötigt.</p>
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="col-12 mb-3">
                        <div class="eat-para2">Gesamtmenge:</div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="divider"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 mb-3">
                        <p class="label">Sub Gesamt: <span class="float-lg-right">{{ordertotalPrice.subtotal | number : 2}} €</span> </p>
                        <p class="label" ng-if="showDiscount">Rabatt: <span class="float-lg-right">{{discount | number : 2}} €</span>  </p>
                        <p class="label">Versandkosten: <span class="float-lg-right">{{ordertotalPrice.deliveryCharges | number : 2}} €</span> </p>
                        <p class="label">Trinkgeld: <span class="float-lg-right">{{ordertotalPrice.tip | number : 2}} €</span> </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-4 text-center">
                        <p id="showpaypalbtn-guide" class="hide text-info" style="font-size:18px">Bitte klicken Sie auf Paypal, um die Zahlung online zu verarbeiten!</p>
                        <div id="paypal-button"></div>
                        <button style="background-color: red; color: white" id="cashbtn" type="submit" class="btn-block py-2 rounded-0 font-weight-bold"> Bestellen & bezahlen ({{ordertotalPrice.totalPrice + ordertotalPrice.tip | number : 2}} €) </button>
                    </div>
                    <div class="col-12">
                        <p style="font-size: 12px; color: rgb(207, 202, 196); margin-bottom: 0; padding-left: 0;">Durch Klicken auf BESTELLEN UND ZAHLEN stimmen Sie dem Inhalt des Warenkorbs, den von Ihnen ausgefüllten Daten, unseren zu <a href="#">Datenschutzerklärung</a> und <a href="#">Nutzungsbedingungen</a></p>
                    </div>
                </div>
            </form>
        </div>

    </section>
    <!-- Ready to eat section ends -->
</div>

@section scripts{
    <script src="https://unpkg.com/swiper/js/swiper.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.4.1/jquery.easing.min.js"></script>
    <script src="~/client-assets/res/js/myscroller.js"></script>
    <script src="~/client-assets/res/js/jquery.waypoints.js"></script>
    <script src="~/client-assets/res/js/myswiper.js"></script>
    <script src="~/client-assets/bootstrap-notify.min.js"></script>
    <script>
        $(function () {
            $('.sizeSelect').click(function () {

            })
        })
    </script>
}