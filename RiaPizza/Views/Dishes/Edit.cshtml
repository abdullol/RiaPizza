@model Dish
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@section css{
    <link href="~/assets/js/Trumbowyg-master/dist/ui/trumbowyg.css" rel="stylesheet" />
    <style>
        .null-marbottom {
            margin-bottom: 0 !important;
        }

        .hide {
            display: none;
        }

        .right {
            float: right;
        }

        tr {
            border-bottom: none;
        }

        .table tbody tr td {
            border-top: none;
            border-bottom: none;
        }
    </style>
}
<script>
    App.controller("EditDish", ['$scope', '$rootScope', function ($scope, $rootScope) {
        function JsonCallParam(Controller, Action, Parameters) {
            $.ajax({
                type: "POST",
                traditional: true,
                async: false,
                cache: false,
                url: '/' + Controller + '/' + Action,
                context: document.body,
                data: Parameters,
                success: function (json) {
                    list = null;
                    list = json;
                }
                ,
                error: function (xhr) {
                    list = null;
                }
            });
        }
        function JsonCall(Controller, Action) {
            $.ajax({
                type: "POST",
                traditional: true,
                async: false,
                cache: false,
                url: '/' + Controller + '/' + Action,
                context: document.body,
                success: function (json) {
                    list = null; list = json;
                },
                error: function (xhr) {
                    list = null;
                    //debugger;
                }
            });
        }

        $scope.addDishExtraTypes = [];
        $scope.dishSizes = [];
        $scope.sizeToppingPrices = [];

        $scope.getSizes = function () {
            JsonCallParam("Dishes", "GetDishSizes", { id: Number($('#dishId').val()) });
            $scope.dishSizes = list;
            list.forEach(function (item) {
                $scope.sizeToppingPrices.push({ dishExtraId: 0, dishSizeId: item.dishSizeId, price: 0, sizeName: item.size });
            })
            $scope.dishSizes.length > 0 ? $scope.multipleSizes = true : $scope.multipleSizes = false;

        }
        $scope.getDishExtraTypes = function () {
            JsonCallParam("Dishes", "GetDishesExtraTypes", { id: Number($('#dishId').val()) });
            $scope.addDishExtraTypes = list;
            $scope.addDishExtraTypes.sort((a, b) => (a.order > b.order) ? 1 : -1);
            $scope.addDishExtraTypes.forEach(function (item) {
                item.dishExtras.sort((a, b) => (a.order > b.order) ? 1 : -1);
                item.dishExtras.forEach(function (extraItem) {
                    var sizeToppings = $scope.dishSizes.filter(({ size: id1 }) => !extraItem.sizeToppingPrices.some(({ sizeName: id2 }) => id2 === id1));

                    for (var i = 0; i < sizeToppings.length; i++) {
                        var toppingPrice = { sizeName: sizeToppings[i].size, dishSizeId: sizeToppings[i].dishSizeId, price: sizeToppings[i].price };
                        extraItem.sizeToppingPrices.push(toppingPrice);
                    }
                })
            })


            
        }
        $scope.pushDishExtraType = function () {
            var length = $scope.addDishExtraTypes.length;
            if (length != 0) {
                if ($scope.addDishExtraTypes[length - 1].typeName === '')
                    return;
            }
            let list = [];
            for (var i = 0; i < $scope.sizeToppingPrices.length; i++) {
                list.push({ dishExtraId: 0, dishSizeId: $scope.sizeToppingPrices[i].dishSizeId, price: 0, sizeName: $scope.sizeToppingPrices[i].sizeName });
            }
            $scope.addDishExtraTypes.push({ dishExtraTypeId: 0, typeName: '', placeholder: "", chooseMultiple: true, dishExtras: [{ extraName: '', extraPrice: 0, sizeToppingPrices: list }] });
        }
        $scope.pushDishExtra = function (i) {
            var length = $scope.addDishExtraTypes[i].dishExtras.length;
            if (length !== 0) {
                if ($scope.addDishExtraTypes[i].dishExtras[length - 1].extraName === "") {
                    return;
                }
            }
            let list = [];
            for (var j = 0; j < $scope.sizeToppingPrices.length; j++) {
                list.push({ dishExtraId: 0, dishSizeId: $scope.sizeToppingPrices[j].dishSizeId, price: 0, sizeName: $scope.sizeToppingPrices[j].sizeName });
            }
            $scope.addDishExtraTypes[i].dishExtras.push({ dishExtraId: 0, extraName: '', extraPrice: 0, sizeToppingPrices: list });
        }

        $scope.removeExtraType = function (i) {
            if ($scope.addDishExtraTypes[i].dishExtraTypeId !== 0) {
                var url = "/Dishes/DeleteDishExtraType?DishExtraTypeId=" + $scope.addDishExtraTypes[i].dishExtraTypeId;
                swal({
                    title: "Are you sure?",
                    text: "You want to delete the item",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, Delete it!",
                    closeOnConfirm: false
                }, function () {
                    $.ajax({
                        type: "GET",
                        url: url,
                        success: function () {
                            swal("Delete!", "Your item deleted!", "success");
                            $scope.addDishExtraTypes.splice(i, 1);
                        },
                        error: function (xhr) {
                            swal("Error", "Please Try again later!", "error");
                        }
                    });

                });
            }
            else {
                $scope.addDishExtraTypes.splice(i, 1);
            }

        }
        $scope.removeExtra = function (extratype, i) {
            if ($scope.addDishExtraTypes[extratype].dishExtras[i].dishExtraId !== 0) {
                var url = "/Dishes/DeleteDishExtra?DishExtraId=" + $scope.addDishExtraTypes[extratype].dishExtras[i].dishExtraId;
                swal({
                    title: "Are you sure?",
                    text: "You want to delete the item",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, Delete it!",
                    closeOnConfirm: false
                }, function () {
                    $.ajax({
                        type: "GET",
                        url: url,
                        success: function () {
                            $scope.addDishExtraTypes[extratype].dishExtras.splice(i, 1);
                            swal("Delete!", "Your item deleted!", "success");
                        },
                        error: function (xhr) {
                            swal("Error", "Please Try again later!", "error");
                        }
                    });

                });
            }
            else {
                $scope.addDishExtraTypes[extratype].dishExtras.splice(i, 1);
            }

        }

        function confirm(url) {
            swal({
                title: "Are you sure?",
                text: "You want to delete the item",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, Delete it!",
                closeOnConfirm: false
            }, function () {
                $.ajax({
                    type: "GET",
                    url: url,
                    success: function () {
                        swal("Delete!", "Your item deleted!", "success");
                    },
                    error: function (xhr) {
                        swal("Error", "Please Try again later!", "error");
                    }
                });

            });
        }

        $scope.getSizes();
        $scope.getDishExtraTypes();

        $scope.copyDishExtraType = function (i) {
            var extraType = angular.copy($scope.addDishExtraTypes[i]);
            extraType.dishExtraTypeId = 0;

            extraType.dishExtras.forEach(function (item) {
                item.dishExtraId = 0
                item.sizeToppingPrices.forEach(s => s.sizeToppingPriceId = 0);
            });
            $scope.addDishExtraTypes.push(extraType);
        }
        $scope.copyDishExtra = function (extraTypeIndex, extraIndex) {
            var extra = angular.copy($scope.addDishExtraTypes[extraTypeIndex].dishExtras[extraIndex]);
            extra.dishExtraId = 0;
            $scope.addDishExtraTypes[extraTypeIndex].dishExtras.push(extra);
        }

        $scope.downwardExtra = function (extraType, i, direction) {
            if (($scope.addDishExtraTypes[extraType].dishExtras.length - 1) === i) return;

            let current = $scope.addDishExtraTypes[extraType].dishExtras[i];
            let updated = $scope.addDishExtraTypes[extraType].dishExtras[i + 1];

            $scope.addDishExtraTypes[extraType].dishExtras[i + 1] = current;
            $scope.addDishExtraTypes[extraType].dishExtras[i] = updated;
        }
        $scope.upwardExtra = function (extraType, i) {
            if (i === 0) return;

            let current = $scope.addDishExtraTypes[extraType].dishExtras[i];
            let updated = $scope.addDishExtraTypes[extraType].dishExtras[i - 1];

            $scope.addDishExtraTypes[extraType].dishExtras[i - 1] = current;
            $scope.addDishExtraTypes[extraType].dishExtras[i] = updated;
        }

        $scope.upward = function (i) {
             if (i === 0) return;

            let current = $scope.addDishExtraTypes[i];
            let updated = $scope.addDishExtraTypes[i - 1];

            $scope.addDishExtraTypes[i - 1] = current;
            $scope.addDishExtraTypes[i] = updated;
        }
        $scope.downward = function (i) {
            if (($scope.addDishExtraTypes.length - 1) === i) return;

            let current = $scope.addDishExtraTypes[i];
            let updated = $scope.addDishExtraTypes[i + 1];

            $scope.addDishExtraTypes[i + 1] = current;
            $scope.addDishExtraTypes[i] = updated;
        }

        $scope.saveAll = function () {
            updateToppingsOrder();


            var pram = { "dishId": JSON.stringify(Number($('#dishId').val())), "dishExtraTypes": JSON.stringify($scope.addDishExtraTypes) };
            JsonCallParam("Dishes", "UpdateDishExtraTypes", pram);

            window.location.reload();
        }
        function updateToppingsOrder() {
            $scope.addDishExtraTypes.forEach(function (item, index) {
                item.order = index + 1;
                item.dishExtras.forEach(function (extraItem, extraIndex) {
                    extraItem.order = extraIndex + 1;
                })
            });
        }
    }]);
</script>
<div class="container-fluid" ng-controller="EditDish">
    <div class="block-header">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <ul class="breadcrumb breadcrumb-style ">
                    <li class="breadcrumb-item">
                        <h4 class="page-title">Dishes</h4>
                    </li>
                    <li class="breadcrumb-item bcrumb-1">
                        <a href="~/Home/Index">
                            <i class="fas fa-home"></i> Home
                        </a>
                    </li>
                    <li class="breadcrumb-item bcrumb-2">
                        <a href="#" onClick="return false;">Dishes</a>
                    </li>
                    <li class="breadcrumb-item active">Edit</li>
                </ul>
            </div>
        </div>
    </div>

    <div class="row clearfix">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="card">
                <div class="header">
                    <h2>
                        <strong>Edit</strong> Dish
                    </h2>
                </div>

                <div class="body" ng-init="">
                    <form action="~/Dishes/Edit" method="post" style="margin-bottom:15px">
                        <h2 class="card-inside-title">Dish Details</h2>
                        <div class="row clearfix">
                            <input type="hidden" asp-for="DishId" value="@Model.DishId" id="dishId" />
                            <div class="col-lg-12 col-md-12 null-marbottom">
                                <label>Dish Category</label>
                                <div class="form-group">
                                    <select class="form-control" asp-for="DishCategoryId" asp-items="@( new SelectList(@ViewBag.Categories,"DishCategoryId","CategoryName" ))" required>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-12 null-marbottom">
                                <div class="form-group">
                                    <label>Dish Name</label>
                                    <input type="text" asp-for="DishName" class="form-control" placeholder="Enter Dish Name" required>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-12 null-marbottom">
                                <div class="form-group">
                                    <label>Sub Name</label>
                                    <input type="text" asp-for="SubName" class="form-control" placeholder="Enter Dish Sub Name">
                                </div>
                            </div>
                            <div class="col-lg-12 col-md-12 null-marbottom">
                                <div class="form-group">
                                    <label>Base Price</label>
                                    <input type="text" asp-for="BasePrice" class="form-control" placeholder="$$" required>
                                </div>
                            </div>
                            <div class="col-lg-12 col-md-12 null-marbottom">
                                <div class="form-group">
                                    <label>Allergies</label>
                                    <textarea id="editor1" asp-for="Allergies">
                                        @Model.Allergies
                                    </textarea>
                                </div>
                            </div>
                            <div class="col-md-12 col-md-12">
                                <div class="form-group">
                                    <label>Description</label>
                                    <textarea id="editor2" asp-for="Description">
                                        @Model.Description
                                    </textarea>
                                </div>
                            </div>
                            <div class="col-md-12 col-md-12">
                                <div class="form-group">
                                    <input class="btn btn-success" type="submit" name="submit" value="Submit" style="float: right; margin-right: 5px " />
                                </div>
                            </div>
                        </div>
                    </form>


                    <h4 class="card-inside-title"> Dish Sizes </h4>
                    <div class="row">
                        <div class="col-12 body table-responsive">
                            <table class="table table-striped">
                                <tr>
                                    <th width="30%">Size</th>
                                    <th width="30%">Price</th>
                                    <th width="30%">Diameter</th>
                                    <th width="10%" class="text-center"><button class="btn btn-primary" onclick="$('#add-dish-size').toggle()"><i class="fa fa-plus"></i></button></th>
                                </tr>
                            </table>
                            @foreach (var size in Model.DishSizes)
                            {
                                <form class="table-responsive" method="post" action="~/Dishes/EditDishSize">
                                    <input type="hidden" name="DishSizeId" value="@size.DishSizeId" />
                                    <input type="hidden" name="DishId" value="@Model.DishId" />
                                    <table class="table table-striped">
                                        <tr>
                                            <td width="30%">
                                                <div class="form-group">
                                                    <input type="text" class="form-control" placeholder="Size" name="Size" value="@size.Size" />
                                                </div>
                                            </td>
                                            <td width="30%">
                                                <div class="form-group">
                                                    <input type="text" class="form-control" placeholder="Price" name="BasePrice" value="@size.BasePrice" />
                                                </div>
                                            </td>
                                            <td width="30%">
                                                <div class="form-group"><input type="text" class="form-control" placeholder="Diameter" name="Diameter" value="@size.Diameter" /></div>
                                            </td>
                                            <td class="text-center" width="10%">
                                                <button class="btn tblActnBtn"><i class="material-icons">save</i></button>
                                                <a href="~/Dishes/DeleteSize/@size.DishSizeId" class="btn tblActnBtn"><i class="material-icons">delete</i></a>
                                            </td>
                                        </tr>
                                    </table>
                                </form>
                            }
                            <form class="table-responsive" id="add-dish-size" style="display:none" method="post" action="~/Dishes/AddDishSize">
                                <input type="hidden" name="DishId" value="@Model.DishId" />
                                <table class="table table-striped">
                                    <tr>
                                        <td width="30%">
                                            <div class="form-group"><input type="text" class="form-control" placeholder="Size" name="Size" /></div>
                                        </td>
                                        <td width="30%">
                                            <div class="form-group"><input type="text" class="form-control" placeholder="Price" name="BasePrice" /></div>
                                        </td>
                                        <td width="30%">
                                            <div class="form-group"><input type="text" class="form-control" placeholder="Diameter" name="Diameter" /></div>
                                        </td>
                                        <td width="10%">
                                            <button class="btn btn-primary"><i class="fas fa-save"></i></button>
                                        </td>
                                    </tr>
                                </table>
                            </form>
                        </div>
                    </div>


                    <h3 class="card-inside-title">
                        Dish Toppings
                        <button type="button" class="btn btn-primary float-right"
                                ng-click="pushDishExtraType()" @*ng-disabled="!haveToppings && extraTypeform.$invalid"*@>
                            <i class="fa fa-plus"></i>
                        </button>
                    </h3>


                    <div class="body table-responsive extra-type-table" ng-repeat="extraType in addDishExtraTypes" ng-init="extraTypeIndex=$index">

                        <form name="extraTypeform">
                            <table class="table table-striped">
                                <tr>
                                    <th width="30%">Topping Heading</th>
                                    <th width="25%">Topping Place Holder</th>
                                    <th width="25%">Topping Selector</th>
                                    <th width="20%" class="text-center">Action</th>
                                </tr>
                                <tr>
                                    <td>
                                        <div class="form-group">
                                            <input type="text" class="form-control" ng-class="{'border-danger': extraTypeform.typeName.$touched && extraTypeform.typeName.$error.required}"
                                                   name="typeName" placeholder="Saucen" ng-model="extraType.typeName" required>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <input type="text" class="form-control" ng-class="{'border-danger': extraTypeform.placeholder.$touched && extraTypeform.placeholder.$error.required}"
                                                   name="placeholder" placeholder="Wählen Sie Ihre Saucen" ng-model="extraType.placeholder" required>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="switch">
                                            <label>
                                                Dropdown
                                                <input type="checkbox" ng-model="extraType.chooseMultiple">
                                                <span class="lever"></span>Checkbox
                                            </label>
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        <button class="btn tblActnBtn" ng-click="removeExtraType($index)"><i class="material-icons">delete</i></button>
                                        <button class="btn tblActnBtn" ng-click="copyDishExtraType($index)"><i class="material-icons">content_copy</i></button>
                                        <button class="btn tblActnBtn" ng-click="downward($index)"><i class="material-icons">keyboard_arrow_down</i></button>
                                        <button class="btn tblActnBtn" ng-click="upward($index)"><i class="material-icons">keyboard_arrow_up</i></button>
                                    </td>
                                </tr>
                            </table>
                        </form>
                        <div class="width-per-90 m-auto">

                            <p class="font-bold">
                                Dish Toppings
                                <button type="button" ng-click="pushDishExtra($index)" class="btn tblActnBtn right">
                                    <i class="material-icons">add</i>
                                </button>
                            </p>
                            <form name="extraForm">
                                <table class="table table-striped extras-table" ng-if="extraType.dishExtras.length > 0">
                                    <tr>
                                        <th width="20%">Name</th>
                                        <th width="20%">Allergies</th>
                                        <th width="40%">Topping Price</th>
                                        <th class="text-center" width="20%">Action</th>
                                    </tr>
                                    <tr ng-repeat="extra in extraType.dishExtras" ng-init="extraIndex=$index">
                                        <td>
                                            <div class="form-group">
                                                <input type="text" class="form-control" ng-class="{'border-danger': extraForm.extraName.$touched && extraForm.extraName.$error.required}"
                                                       name="extraName" placeholder="Mayonnaise" ng-model="extra.extraName" required>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="form-group">
                                                <input type="text" class="form-control" placeholder="Allergies" ng-model="extra.allergies" />
                                            </div>
                                        </td>
                                        <td ng-if="!multipleSizes">
                                            <div class="form-group">
                                                <input type="number" class="form-control" placeholder="$$" ng-model="extra.extraPrice" min="0" required>
                                            </div>
                                        </td>
                                        <td ng-if="multipleSizes">
                                            <div class="form-group">
                                                <div class="form-inline">
                                                    <input ng-repeat="sizePrice in extra.sizeToppingPrices"
                                                           type="number" min="0" class="form-control"
                                                           placeholder="{{sizePrice.sizeName}}" ng-model="sizePrice.price"
                                                           style="width:24%; margin-right:1%" />
                                                </div>
                                            </div>
                                        </td>
                                        <td class="text-center">
                                            <button class="btn tblActnBtn" ng-click="removeExtra(extraTypeIndex, $index)"><i class="material-icons">delete</i></button>
                                            <button class="btn tblActnBtn" ng-click="copyDishExtra(extraTypeIndex, extraIndex)"><i class="material-icons">content_copy</i></button>
                                            <button class="btn tblActnBtn" ng-click="downwardExtra(extraTypeIndex, $index)"><i class="material-icons">keyboard_arrow_down</i></button>
                                            <button class="btn tblActnBtn" ng-click="upwardExtra(extraTypeIndex, $index)"><i class="material-icons">keyboard_arrow_up</i></button>
                                        </td>
                                    </tr>
                                </table>
                            </form>
                        </div>

                        <span class="font-bold float-right">{{$index+1}}</span>
                    </div>

                    <div>
                        <button ng-click="saveAll()" class="btn btn-success float-right">Save</button>
                    </div>

                </div>
            </div>
        </div>
    </div>

</div>

@section scripts{

    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js"></script>
    <script src="~/assets/js/form.min.js"></script>
    <script src="~/assets/js/pages/forms/form-wizard.js"></script>

    <script src="https://cdn.ckeditor.com/4.14.0/standard/ckeditor.js"></script>
    <script>

        function saveSequence(dishId) {
            var extraTypes = [];
            $('#extra-types .extra-type').each(function (i) {
                var typeId = $(this).data('id');
                var extras = [];
                $(this).find('.dish-extras-ordering tr').each(function (j) {
                    var extraId = $(this).data('id');
                    extras.push({ id: extraId, order: j+1 });
                })
                extraTypes.push({ id: typeId, order: i+1, dishExtras: extras });
            });
            $.ajax({
                type: "POST",
                url: '/Dishes/UpdateToppingSequence',
                data: { "toppingSequence": JSON.stringify(extraTypes), "dishId":dishId },
                success: function () {
                    swal("Updated!", "Topping Sequence Updated!", "success");
                    window.location.reload();
                },
                error: function (xhr) {
                    swal("Error", "Please Try again later!", "error");
                }
            });
        }

        function deleteExtraType(itemId, returnId) {
            var url = "/Dishes/DeleteDishExtraType?returnId=" + returnId + "&DishExtraTypeId=" + itemId;
            confirm(url);
        }
        function deleteExtra(itemId, returnId) {
            var url = "/Dishes/DeleteDishExtra?returnId=" + returnId + "&DishExtraId=" + itemId;
            confirm(url);
        }

        function confirm(url) {
            swal({
                title: "Are you sure?",
                text: "You want to delete the item",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, clone it!",
                closeOnConfirm: false
            }, function () {
                $.ajax({
                    type: "GET",
                    url: url,
                    success: function () {
                        swal("Delete!", "You item deleted!", "success");
                        window.location.reload();
                    },
                    error: function (xhr) {
                        swal("Error", "Please Try again later!", "error");
                    }
                });

            });
        }

        $("tbody").sortable({
            items: "> tr",
            appendTo: "parent",
            helper: "clone"
        }).disableSelection();
        CKEDITOR.replace('editor1');
        CKEDITOR.replace('editor2');
        CKEDITOR.config.height = 150;

    </script>
}